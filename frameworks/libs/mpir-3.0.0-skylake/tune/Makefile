# Makefile.in generated by automake 1.15.1 from Makefile.am.
# tune/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright 2000, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2009,
# 2010, 2011 Free Software Foundation, Inc.
#
# This file is part of the GNU MP Library.
#
# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# The GNU MP Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the GNU MP Library.  If not, see http://www.gnu.org/licenses/.

# Copyright 1996, 1998, 1999, 2000, 2001, 2002 Free Software Foundation,
# Inc.
#
# Copyright 2008 William Hart
#
# This file is part of the MPIR Library.
#
# The MPIR Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# The MPIR Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the MPIR Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mpir
pkgincludedir = $(includedir)/mpir
pkglibdir = $(libdir)/mpir
pkglibexecdir = $(libexecdir)/mpir
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = skylakeavx-apple-darwin18.2.0
host_triplet = skylakeavx-apple-darwin18.2.0
EXTRA_PROGRAMS = speed$(EXEEXT) speed-dynamic$(EXEEXT) \
	speed-ext$(EXEEXT) tuneup$(EXEEXT)
subdir = tune
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) \
	$(top_builddir)/tests/libtests.la $(top_builddir)/libmpir.la
am_libspeed_la_OBJECTS = common.lo divrem1div.lo divrem1inv.lo \
	divrem2div.lo divrem2inv.lo freq.lo gcdext_single.lo \
	gcdext_double.lo gcdextod.lo gcdextos.lo hgcd_lehmer.lo \
	hgcd_appr_lehmer.lo hgcd_reduce_1.lo hgcd_reduce_2.lo \
	jacbase1.lo jacbase2.lo jacbase3.lo jacbase4.lo mod_1_div.lo \
	mod_1_inv.lo modlinv.lo noop.lo powm_mod.lo powm_redc.lo \
	preinv_divrem_1.lo fac_ui_large.lo fac_ui_small.lo set_strb.lo \
	set_strs.lo set_strp.lo time.lo
libspeed_la_OBJECTS = $(am_libspeed_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libspeed_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libspeed_la_LDFLAGS) $(LDFLAGS) -o $@
am_speed_OBJECTS = speed.$(OBJEXT)
speed_OBJECTS = $(am_speed_OBJECTS)
speed_LDADD = $(LDADD)
speed_DEPENDENCIES = $(DEPENDENCIES)
speed_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(speed_LDFLAGS) $(LDFLAGS) -o $@
am_speed_dynamic_OBJECTS = speed.$(OBJEXT)
speed_dynamic_OBJECTS = $(am_speed_dynamic_OBJECTS)
speed_dynamic_LDADD = $(LDADD)
speed_dynamic_DEPENDENCIES = $(DEPENDENCIES)
am_speed_ext_OBJECTS = speed-ext.$(OBJEXT)
speed_ext_OBJECTS = $(am_speed_ext_OBJECTS)
speed_ext_LDADD = $(LDADD)
speed_ext_DEPENDENCIES = $(DEPENDENCIES)
speed_ext_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(speed_ext_LDFLAGS) $(LDFLAGS) -o $@
am_tuneup_OBJECTS = tuneup.$(OBJEXT)
am__objects_1 = divrem_2.$(OBJEXT) gcd.$(OBJEXT) gcdext.$(OBJEXT) \
	get_str.$(OBJEXT) set_str.$(OBJEXT) matrix22_mul.$(OBJEXT) \
	hgcd.$(OBJEXT) hgcd_appr.$(OBJEXT) hgcd_reduce.$(OBJEXT) \
	mul_n.$(OBJEXT) mullow_n.$(OBJEXT) mulhigh_n.$(OBJEXT) \
	mul.$(OBJEXT) tdiv_qr.$(OBJEXT) mulmid.$(OBJEXT) \
	mulmid_n.$(OBJEXT) toom42_mulmid.$(OBJEXT) \
	toom4_mul_n.$(OBJEXT) toom4_mul.$(OBJEXT) toom3_mul.$(OBJEXT) \
	toom3_mul_n.$(OBJEXT) toom8h_mul.$(OBJEXT) \
	toom8_sqr_n.$(OBJEXT) mulmod_2expm1.$(OBJEXT) \
	mulmod_2expp1_basecase.$(OBJEXT) rootrem.$(OBJEXT) \
	divrem_euclidean_r_1.$(OBJEXT) divrem_hensel_qr_1.$(OBJEXT) \
	rsh_divrem_hensel_qr_1.$(OBJEXT) sb_divappr_q.$(OBJEXT) \
	sb_div_qr.$(OBJEXT) dc_divappr_q.$(OBJEXT) dc_div_qr.$(OBJEXT) \
	dc_div_qr_n.$(OBJEXT) inv_divappr_q.$(OBJEXT) \
	inv_div_qr.$(OBJEXT) tdiv_q.$(OBJEXT) dc_bdiv_qr.$(OBJEXT) \
	dc_bdiv_qr_n.$(OBJEXT) dc_bdiv_q.$(OBJEXT)
am__objects_2 = split_bits.$(OBJEXT) revbin.$(OBJEXT) \
	normmod_2expp1.$(OBJEXT) mulmod_2expp1.$(OBJEXT) \
	mul_trunc_sqrt2.$(OBJEXT) mul_mfa_trunc_sqrt2.$(OBJEXT) \
	mul_fft_main.$(OBJEXT) mul_2expmod_2expp1.$(OBJEXT) \
	ifft_trunc_sqrt2.$(OBJEXT) ifft_trunc.$(OBJEXT) \
	ifft_radix2.$(OBJEXT) ifft_negacyclic.$(OBJEXT) \
	fft_trunc.$(OBJEXT) fft_radix2.$(OBJEXT) \
	fft_negacyclic.$(OBJEXT) fft_mfa_trunc_sqrt2.$(OBJEXT) \
	fft_mfa_trunc_sqrt2_inner.$(OBJEXT) fermat_to_mpz.$(OBJEXT) \
	div_2expmod_2expp1.$(OBJEXT) combine_bits.$(OBJEXT) \
	butterfly_rshB.$(OBJEXT) butterfly_lshB.$(OBJEXT) \
	adjust_sqrt2.$(OBJEXT) adjust.$(OBJEXT)
am__objects_3 = $(am__objects_1) $(am__objects_2) divrem_1.$(OBJEXT) \
	mod_1.$(OBJEXT)
nodist_tuneup_OBJECTS = sqr_basecase.$(OBJEXT) fac_ui.$(OBJEXT) \
	$(am__objects_3)
tuneup_OBJECTS = $(am_tuneup_OBJECTS) $(nodist_tuneup_OBJECTS)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) libspeed.la
tuneup_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(tuneup_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libspeed_la_SOURCES) $(speed_SOURCES) \
	$(speed_dynamic_SOURCES) $(speed_ext_SOURCES) \
	$(tuneup_SOURCES) $(nodist_tuneup_SOURCES)
DIST_SOURCES = $(libspeed_la_SOURCES) $(speed_SOURCES) \
	$(speed_dynamic_SOURCES) $(speed_ext_SOURCES) \
	$(tuneup_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/../mpn/Makeasm.am $(srcdir)/Makefile.in \
	README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI = 64
ACLOCAL = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing autoconf
AUTOHEADER = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing autoheader
AUTOMAKE = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing automake-1.15
AWK = awk
BITS_PER_MP_LIMB = 64
CALLING_CONVENTIONS_OBJS = x86_64call.lo x86_64check$U.lo
CC = /usr/local/bin/gcc-8
CCAS = /usr/local/bin/gcc-8 -c
CC_FOR_BUILD = /usr/local/bin/gcc-8
CFLAGS = -m64 -O2 -march=skylake -mtune=skylake
CPP = /usr/local/bin/gcc-8 -E
CPPFLAGS = 
CPP_FOR_BUILD = /usr/local/bin/gcc-8 -E
CXX = /usr/local/bin/g++-8
CXXCPP = /usr/local/bin/g++-8 -E
CXXFLAGS = -m64 -O2 -march=skylake -mtune=skylake
CYGPATH_W = echo
DEFN_LONG_LONG_LIMB = /* #undef _LONG_LONG_LIMB */
DEFS = -DHAVE_CONFIG_H
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXEEXT_FOR_BUILD = 
FGREP = /usr/bin/grep -F
GMP_CC = /* No __GMP_CC here as --enable-gmpcompat option not selected */
GMP_CFLAGS = 
GMP_LDFLAGS = 
GMP_NAIL_BITS = 0
GREP = /usr/bin/grep
GSYM_FLAG = -D GSYM_PREFIX
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBGMPXX_LDFLAGS = 
LIBGMP_DLL = 0
LIBGMP_LDFLAGS = 
LIBM = 
LIBM_FOR_BUILD = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
M4 = m4
MAINT = #
MAKEINFO = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /opt/local/bin/gmkdir -p
MPIR_AS = /usr/local/bin/yasm
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJECT_FORMAT = -f macho64
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = mpir
PACKAGE_BUGREPORT = http://groups.google.co.uk/group/mpir-devel/
PACKAGE_NAME = MPIR
PACKAGE_STRING = MPIR 3.0.0
PACKAGE_TARNAME = mpir
PACKAGE_URL = 
PACKAGE_VERSION = 3.0.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
SPEED_CYCLECOUNTER_OBJ = x86_64.lo
STRIP = strip
TAL_OBJECT = tal-reent.lo
TUNE_SQR_OBJ = 
U_FOR_BUILD = 
VERSION = 3.0.0
abs_builddir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/tune
abs_srcdir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/tune
abs_top_builddir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake
abs_top_srcdir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake
ac_ct_AR = ar
ac_ct_CC = /usr/local/bin/gcc-8
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__leading_dot = .
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = skylakeavx-apple-darwin18.2.0
build_alias = 
build_cpu = skylakeavx
build_os = darwin18.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gmp_srclinks =  mpn/add.c mpn/add_1.c mpn/add_n.as mpn/sub.c mpn/sub_1.c mpn/sub_n.as mpn/mul_1.as mpn/addmul_1.asm mpn/submul_1.as mpn/lshift.as mpn/rshift.as mpn/addadd_n.c mpn/addsub_n.c mpn/subadd_n.c mpn/comb_tables.c mpn/divexact_1.c mpn/divexact_by3c.as mpn/divexact_byff.as mpn/divexact_byfobm1.as mpn/divisible_p.c mpn/divrem.c mpn/divrem_1.c mpn/divrem_2.as mpn/divrem_euclidean_qr_1.as mpn/divrem_euclidean_qr_2.as mpn/divrem_euclidean_r_1.c mpn/divrem_hensel_qr_1.c mpn/divrem_hensel_qr_1_1.asm mpn/divrem_hensel_qr_1_2.c mpn/divrem_hensel_r_1.c mpn/divrem_hensel_rsh_qr_1.c mpn/rsh_divrem_hensel_qr_1.c mpn/rsh_divrem_hensel_qr_1_1.asm mpn/rsh_divrem_hensel_qr_1_2.asm mpn/add_err1_n.as mpn/add_err2_n.asm mpn/sub_err1_n.as mpn/sub_err2_n.asm mpn/fib2_ui.c mpn/mod_1.c mpn/mod_34lsub1.c mpn/modexact_1c_odd.as mpn/preinv_mod_1.c mpn/dump.c mpn/gcd_subdiv_step.c mpn/gcdext_lehmer.c mpn/gcdext_1.c mpn/hgcd.c mpn/matrix22_mul.c mpn/hgcd2.c mpn/hgcd2_jacobi.c mpn/hgcd_appr.c mpn/hgcd_jacobi.c mpn/hgcd_matrix.c mpn/hgcd_reduce.c mpn/hgcd_step.c mpn/matrix22_mul1_inverse_vector.c mpn/mod_1_1.asm mpn/mod_1_2.asm mpn/mod_1_3.asm mpn/tdiv_q.c mpn/mp_bases.c mpn/fib_table.c mpn/mulmid_basecase.asm mpn/mulmid.c mpn/mulmid_n.c mpn/toom42_mulmid.c mpn/mulmod_bexpp1.c mpn/mulmod_2expm1.c mpn/mulmod_2expp1_basecase.c mpn/mul_fft.c mpn/mul.c mpn/mul_n.c mpn/mul_basecase.asm mpn/sqr_basecase.asm mpn/random.c mpn/random2.c mpn/pow_1.c mpn/powlo.c mpn/powm.c mpn/binvert.c mpn/urandomb.c mpn/urandomm.c mpn/randomb.c mpn/rrandom.c mpn/invert.c mpn/rootrem.c mpn/sizeinbase.c mpn/sqrtrem.c mpn/get_str.c mpn/set_str.c mpn/scan0.c mpn/scan1.c mpn/popcount.asm mpn/hamdist.asm mpn/cmp.c mpn/perfect_square_p.c mpn/bdivmod.c mpn/gcd.c mpn/gcd_1.c mpn/gcdext.c mpn/tdiv_qr.c mpn/jacobi_base.c mpn/jacobi.c mpn/jacobi_2.c mpn/get_d.c mpn/mullow_n.c mpn/mulhigh_n.c mpn/mullow_n_basecase.asm mpn/mullow_basecase.c mpn/redc_1.as mpn/redc_2.c mpn/redc_n.c mpn/sb_divappr_q.c mpn/toom3_mul.c mpn/toom3_mul_n.c mpn/toom4_mul.c mpn/toom4_mul_n.c mpn/dc_div_q.c mpn/dc_divappr_q.c mpn/sb_div_q.c mpn/sb_div_qr.c mpn/dc_div_qr.c mpn/dc_div_qr_n.c mpn/inv_divappr_q_n.c mpn/inv_divappr_q.c mpn/inv_div_q.c mpn/inv_div_qr.c mpn/inv_div_qr_n.c mpn/rootrem_basecase.c mpn/toom_eval_dgr3_pm1.c mpn/toom_eval_dgr3_pm2.c mpn/toom_eval_pm1.c mpn/toom_eval_pm2.c mpn/toom_eval_pm2exp.c mpn/toom_eval_pm2rexp.c mpn/toom_interpolate_16pts.c mpn/toom8_sqr_n.c mpn/toom8h_mul.c mpn/toom_couple_handling.c mpn/sb_bdiv_q.c mpn/sb_bdiv_qr.c mpn/dc_bdiv_q_n.c mpn/dc_bdiv_q.c mpn/dc_bdiv_qr.c mpn/dc_bdiv_qr_n.c mpn/divexact.c mpn/zero.c mpn/copyi.as mpn/copyd.as mpn/com_n.as mpn/neg_n.c mpn/and_n.asm mpn/andn_n.asm mpn/nand_n.asm mpn/ior_n.asm mpn/iorn_n.asm mpn/nior_n.asm mpn/xor_n.asm mpn/xnor_n.asm mpn/lshift1.as mpn/rshift1.as mpn/lshift2.asm mpn/mul_2.asm mpn/store.asm mpn/karaadd.asm mpn/karasub.as mpn/addmul_2.as mpn/addlsh1_n.as mpn/sublsh1_n.as mpn/sumdiff_n.as mpn/lshiftc.asm mpn/nsumdiff_n.as gmp-mparam.h longlong.h
host = skylakeavx-apple-darwin18.2.0
host_alias = 
host_cpu = skylakeavx
host_os = darwin18.2.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
mpn_objects =  add$U.lo add_1$U.lo add_n.lo sub$U.lo sub_1$U.lo sub_n.lo mul_1.lo addmul_1.lo submul_1.lo lshift.lo rshift.lo addadd_n$U.lo addsub_n$U.lo subadd_n$U.lo comb_tables$U.lo divexact_1$U.lo divexact_by3c.lo divexact_byff.lo divexact_byfobm1.lo divisible_p$U.lo divrem$U.lo divrem_1$U.lo divrem_2.lo divrem_euclidean_qr_1.lo divrem_euclidean_qr_2.lo divrem_euclidean_r_1$U.lo divrem_hensel_qr_1$U.lo divrem_hensel_qr_1_1.lo divrem_hensel_qr_1_2$U.lo divrem_hensel_r_1$U.lo divrem_hensel_rsh_qr_1$U.lo rsh_divrem_hensel_qr_1$U.lo rsh_divrem_hensel_qr_1_1.lo rsh_divrem_hensel_qr_1_2.lo add_err1_n.lo add_err2_n.lo sub_err1_n.lo sub_err2_n.lo fib2_ui$U.lo mod_1$U.lo mod_34lsub1$U.lo modexact_1c_odd.lo preinv_mod_1$U.lo dump$U.lo gcd_subdiv_step$U.lo gcdext_lehmer$U.lo gcdext_1$U.lo hgcd$U.lo matrix22_mul$U.lo hgcd2$U.lo hgcd2_jacobi$U.lo hgcd_appr$U.lo hgcd_jacobi$U.lo hgcd_matrix$U.lo hgcd_reduce$U.lo hgcd_step$U.lo matrix22_mul1_inverse_vector$U.lo mod_1_1.lo mod_1_2.lo mod_1_3.lo tdiv_q$U.lo mp_bases$U.lo fib_table$U.lo mulmid_basecase.lo mulmid$U.lo mulmid_n$U.lo toom42_mulmid$U.lo mulmod_bexpp1$U.lo mulmod_2expm1$U.lo mulmod_2expp1_basecase$U.lo mul_fft$U.lo mul$U.lo mul_n$U.lo mul_basecase.lo sqr_basecase.lo random$U.lo random2$U.lo pow_1$U.lo powlo$U.lo powm$U.lo binvert$U.lo urandomb$U.lo urandomm$U.lo randomb$U.lo rrandom$U.lo invert$U.lo rootrem$U.lo sizeinbase$U.lo sqrtrem$U.lo get_str$U.lo set_str$U.lo scan0$U.lo scan1$U.lo popcount.lo hamdist.lo cmp$U.lo perfect_square_p$U.lo bdivmod$U.lo gcd$U.lo gcd_1$U.lo gcdext$U.lo tdiv_qr$U.lo jacobi_base$U.lo jacobi$U.lo jacobi_2$U.lo get_d$U.lo mullow_n$U.lo mulhigh_n$U.lo mullow_n_basecase.lo mullow_basecase$U.lo redc_1.lo redc_2$U.lo redc_n$U.lo sb_divappr_q$U.lo toom3_mul$U.lo toom3_mul_n$U.lo toom4_mul$U.lo toom4_mul_n$U.lo dc_div_q$U.lo dc_divappr_q$U.lo sb_div_q$U.lo sb_div_qr$U.lo dc_div_qr$U.lo dc_div_qr_n$U.lo inv_divappr_q_n$U.lo inv_divappr_q$U.lo inv_div_q$U.lo inv_div_qr$U.lo inv_div_qr_n$U.lo rootrem_basecase$U.lo toom_eval_dgr3_pm1$U.lo toom_eval_dgr3_pm2$U.lo toom_eval_pm1$U.lo toom_eval_pm2$U.lo toom_eval_pm2exp$U.lo toom_eval_pm2rexp$U.lo toom_interpolate_16pts$U.lo toom8_sqr_n$U.lo toom8h_mul$U.lo toom_couple_handling$U.lo sb_bdiv_q$U.lo sb_bdiv_qr$U.lo dc_bdiv_q_n$U.lo dc_bdiv_q$U.lo dc_bdiv_qr$U.lo dc_bdiv_qr_n$U.lo divexact$U.lo zero$U.lo copyi.lo copyd.lo com_n.lo neg_n$U.lo and_n.lo andn_n.lo nand_n.lo ior_n.lo iorn_n.lo nior_n.lo xor_n.lo xnor_n.lo lshift1.lo rshift1.lo lshift2.lo mul_2.lo store.lo karaadd.lo karasub.lo addmul_2.lo addlsh1_n.lo sublsh1_n.lo sumdiff_n.lo lshiftc.lo nsumdiff_n.lo
mpn_objs_in_libgmp =  mpn/add$U.lo mpn/add_1$U.lo mpn/add_n.lo mpn/sub$U.lo mpn/sub_1$U.lo mpn/sub_n.lo mpn/mul_1.lo mpn/addmul_1.lo mpn/submul_1.lo mpn/lshift.lo mpn/rshift.lo mpn/addadd_n$U.lo mpn/addsub_n$U.lo mpn/subadd_n$U.lo mpn/comb_tables$U.lo mpn/divexact_1$U.lo mpn/divexact_by3c.lo mpn/divexact_byff.lo mpn/divexact_byfobm1.lo mpn/divisible_p$U.lo mpn/divrem$U.lo mpn/divrem_1$U.lo mpn/divrem_2.lo mpn/divrem_euclidean_qr_1.lo mpn/divrem_euclidean_qr_2.lo mpn/divrem_euclidean_r_1$U.lo mpn/divrem_hensel_qr_1$U.lo mpn/divrem_hensel_qr_1_1.lo mpn/divrem_hensel_qr_1_2$U.lo mpn/divrem_hensel_r_1$U.lo mpn/divrem_hensel_rsh_qr_1$U.lo mpn/rsh_divrem_hensel_qr_1$U.lo mpn/rsh_divrem_hensel_qr_1_1.lo mpn/rsh_divrem_hensel_qr_1_2.lo mpn/add_err1_n.lo mpn/add_err2_n.lo mpn/sub_err1_n.lo mpn/sub_err2_n.lo mpn/fib2_ui$U.lo mpn/mod_1$U.lo mpn/mod_34lsub1$U.lo mpn/modexact_1c_odd.lo mpn/preinv_mod_1$U.lo mpn/dump$U.lo mpn/gcd_subdiv_step$U.lo mpn/gcdext_lehmer$U.lo mpn/gcdext_1$U.lo mpn/hgcd$U.lo mpn/matrix22_mul$U.lo mpn/hgcd2$U.lo mpn/hgcd2_jacobi$U.lo mpn/hgcd_appr$U.lo mpn/hgcd_jacobi$U.lo mpn/hgcd_matrix$U.lo mpn/hgcd_reduce$U.lo mpn/hgcd_step$U.lo mpn/matrix22_mul1_inverse_vector$U.lo mpn/mod_1_1.lo mpn/mod_1_2.lo mpn/mod_1_3.lo mpn/tdiv_q$U.lo mpn/mp_bases$U.lo mpn/fib_table$U.lo mpn/mulmid_basecase.lo mpn/mulmid$U.lo mpn/mulmid_n$U.lo mpn/toom42_mulmid$U.lo mpn/mulmod_bexpp1$U.lo mpn/mulmod_2expm1$U.lo mpn/mulmod_2expp1_basecase$U.lo mpn/mul_fft$U.lo mpn/mul$U.lo mpn/mul_n$U.lo mpn/mul_basecase.lo mpn/sqr_basecase.lo mpn/random$U.lo mpn/random2$U.lo mpn/pow_1$U.lo mpn/powlo$U.lo mpn/powm$U.lo mpn/binvert$U.lo mpn/urandomb$U.lo mpn/urandomm$U.lo mpn/randomb$U.lo mpn/rrandom$U.lo mpn/invert$U.lo mpn/rootrem$U.lo mpn/sizeinbase$U.lo mpn/sqrtrem$U.lo mpn/get_str$U.lo mpn/set_str$U.lo mpn/scan0$U.lo mpn/scan1$U.lo mpn/popcount.lo mpn/hamdist.lo mpn/cmp$U.lo mpn/perfect_square_p$U.lo mpn/bdivmod$U.lo mpn/gcd$U.lo mpn/gcd_1$U.lo mpn/gcdext$U.lo mpn/tdiv_qr$U.lo mpn/jacobi_base$U.lo mpn/jacobi$U.lo mpn/jacobi_2$U.lo mpn/get_d$U.lo mpn/mullow_n$U.lo mpn/mulhigh_n$U.lo mpn/mullow_n_basecase.lo mpn/mullow_basecase$U.lo mpn/redc_1.lo mpn/redc_2$U.lo mpn/redc_n$U.lo mpn/sb_divappr_q$U.lo mpn/toom3_mul$U.lo mpn/toom3_mul_n$U.lo mpn/toom4_mul$U.lo mpn/toom4_mul_n$U.lo mpn/dc_div_q$U.lo mpn/dc_divappr_q$U.lo mpn/sb_div_q$U.lo mpn/sb_div_qr$U.lo mpn/dc_div_qr$U.lo mpn/dc_div_qr_n$U.lo mpn/inv_divappr_q_n$U.lo mpn/inv_divappr_q$U.lo mpn/inv_div_q$U.lo mpn/inv_div_qr$U.lo mpn/inv_div_qr_n$U.lo mpn/rootrem_basecase$U.lo mpn/toom_eval_dgr3_pm1$U.lo mpn/toom_eval_dgr3_pm2$U.lo mpn/toom_eval_pm1$U.lo mpn/toom_eval_pm2$U.lo mpn/toom_eval_pm2exp$U.lo mpn/toom_eval_pm2rexp$U.lo mpn/toom_interpolate_16pts$U.lo mpn/toom8_sqr_n$U.lo mpn/toom8h_mul$U.lo mpn/toom_couple_handling$U.lo mpn/sb_bdiv_q$U.lo mpn/sb_bdiv_qr$U.lo mpn/dc_bdiv_q_n$U.lo mpn/dc_bdiv_q$U.lo mpn/dc_bdiv_qr$U.lo mpn/dc_bdiv_qr_n$U.lo mpn/divexact$U.lo mpn/zero$U.lo mpn/copyi.lo mpn/copyd.lo mpn/com_n.lo mpn/neg_n$U.lo mpn/and_n.lo mpn/andn_n.lo mpn/nand_n.lo mpn/ior_n.lo mpn/iorn_n.lo mpn/nior_n.lo mpn/xor_n.lo mpn/xnor_n.lo mpn/lshift1.lo mpn/rshift1.lo mpn/lshift2.lo mpn/mul_2.lo mpn/store.lo mpn/karaadd.lo mpn/karasub.lo mpn/addmul_2.lo mpn/addlsh1_n.lo mpn/sublsh1_n.lo mpn/sumdiff_n.lo mpn/lshiftc.lo mpn/nsumdiff_n.lo
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/tests
EXTRA_DIST = alpha.asm pentium.asm sparcv9.asm hppa.asm hppa2.asm hppa2w.asm \
  ia64.asm powerpc.asm powerpc64.asm x86_64.as many.pl

noinst_HEADERS = speed.h
#STATIC = 

# Prefer -static on the speed and tune programs, since that can avoid
# overheads of shared library linkages on some systems.  Libtool tends to
# botch -static if configured with --disable-static, perhaps reasonably
# enough.  In any event under --disable-static the only choice is a dynamic
# link so there's no point in -static.
#
STATIC = -static
EXTRA_LTLIBRARIES = libspeed.la
libspeed_la_SOURCES = \
  common.c divrem1div.c divrem1inv.c divrem2div.c divrem2inv.c		\
  freq.c 				\
  gcdext_single.c gcdext_double.c gcdextod.c gcdextos.c			\
  hgcd_lehmer.c hgcd_appr_lehmer.c hgcd_reduce_1.c hgcd_reduce_2.c      \
  jacbase1.c jacbase2.c jacbase3.c jacbase4.c				\
  mod_1_div.c mod_1_inv.c modlinv.c					\
  noop.c powm_mod.c powm_redc.c preinv_divrem_1.c				\
  fac_ui_large.c fac_ui_small.c						\
  set_strb.c set_strs.c set_strp.c time.c

libspeed_la_DEPENDENCIES = $(SPEED_CYCLECOUNTER_OBJ) \
  $(top_builddir)/tests/libtests.la $(top_builddir)/libmpir.la

libspeed_la_LIBADD = $(libspeed_la_DEPENDENCIES) $(LIBM)
libspeed_la_LDFLAGS = $(STATIC)
DEPENDENCIES = libspeed.la
LDADD = $(DEPENDENCIES)
speed_SOURCES = speed.c
speed_LDFLAGS = $(STATIC)
speed_dynamic_SOURCES = speed.c
speed_ext_SOURCES = speed-ext.c
speed_ext_LDFLAGS = $(STATIC)
tuneup_SOURCES = tuneup.c
nodist_tuneup_SOURCES = sqr_basecase.c fac_ui.c $(TUNE_MPN_SRCS)
tuneup_DEPENDENCIES = $(TUNE_SQR_OBJ) libspeed.la
tuneup_LDADD = $(tuneup_DEPENDENCIES)
tuneup_LDFLAGS = $(STATIC)

# $(MANY_CLEAN) and $(MANY_DISTCLEAN) are hooks for many.pl
CLEANFILES = $(EXTRA_PROGRAMS) $(EXTRA_LTLIBRARIES) \
	$(TUNE_MPN_SRCS) sqr_asm.asm \
	stg.gnuplot stg.data \
	mtg.gnuplot mtg.data \
	fibg.gnuplot fibg.data \
	graph.gnuplot graph.data \
	$(MANY_CLEAN)

DISTCLEANFILES = sqr_basecase.c fac_ui.c $(MANY_DISTCLEAN)

# Generating these little files at build time seems better than including
# them in the distribution, since the list can be changed more easily.
#
# mpn/generic/tdiv_qr.c uses mpn_divrem_1 and mpn_divrem_2, but only for 1
# and 2 limb divisors, which are never used during tuning, so it doesn't
# matter whether it picks up a tuned or untuned version of those.
#
# divrem_1 and mod_1 are recompiled renamed to "_tune" to avoid a linking
# problem.  If a native divrem_1 provides an mpn_divrem_1c entrypoint then
# common.c will want that, but the generic divrem_1 doesn't provide it,
# likewise for mod_1.  The simplest way around this is to have the tune
# build versions renamed suitably.
#
# FIXME: Would like say mul_n.c to depend on $(top_builddir)/mul_n.c so the
# recompiled object will be rebuilt if that file changes.
TUNE_MPN_SRCS = $(TUNE_MPN_SRCS_BASIC) $(TUNE_FFT_SRCS_BASIC) divrem_1.c mod_1.c
TUNE_MPN_SRCS_BASIC = divrem_2.c gcd.c gcdext.c get_str.c set_str.c \
  matrix22_mul.c hgcd.c hgcd_appr.c hgcd_reduce.c \
  mul_n.c mullow_n.c mulhigh_n.c mul.c tdiv_qr.c \
  mulmid.c mulmid_n.c toom42_mulmid.c \
  toom4_mul_n.c toom4_mul.c toom3_mul.c toom3_mul_n.c \
  toom8h_mul.c toom8_sqr_n.c mulmod_2expm1.c mulmod_2expp1_basecase.c \
  rootrem.c divrem_euclidean_r_1.c \
  divrem_hensel_qr_1.c rsh_divrem_hensel_qr_1.c sb_divappr_q.c sb_div_qr.c \
  dc_divappr_q.c dc_div_qr.c dc_div_qr_n.c \
  inv_divappr_q.c inv_div_qr.c tdiv_q.c dc_bdiv_qr.c dc_bdiv_qr_n.c dc_bdiv_q.c 

TUNE_FFT_SRCS_BASIC = split_bits.c revbin.c normmod_2expp1.c mulmod_2expp1.c \
  mul_trunc_sqrt2.c mul_mfa_trunc_sqrt2.c mul_fft_main.c \
  mul_2expmod_2expp1.c ifft_trunc_sqrt2.c ifft_trunc.c ifft_radix2.c \
  ifft_negacyclic.c fft_trunc.c fft_radix2.c fft_negacyclic.c \
  fft_mfa_trunc_sqrt2.c fft_mfa_trunc_sqrt2_inner.c fermat_to_mpz.c \
  div_2expmod_2expp1.c combine_bits.c butterfly_rshB.c butterfly_lshB.c \
  adjust_sqrt2.c adjust.c


# COMPILE minus CC.
#
COMPILE_FLAGS = $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(INCLUDES) $(DEFAULT_INCLUDES) 

# Flags used for preprocessing (in ansi2knr rules).
#
PREPROCESS_FLAGS = $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS)


# Recent versions of automake (1.5 and up for instance) append automake
# generated suffixes to this $(SUFFIXES) list.  This is essential for us,
# since .c must come after .s, .S and .asm.  If .c is before .s, for
# instance, then in the mpn directory "make" will see add_n.c mentioned in
# an explicit rule (the ansi2knr stuff) and decide it must have add_n.c,
# even if add_n.c doesn't exist but add_n.s does.  See GNU make
# documentation "(make)Implicit Rule Search", part 5c.
#
# On IRIX 6 native make this doesn't work properly though.  Somehow .c
# remains ahead of .s, perhaps because .c.s is a builtin rule.  .asm works
# fine though, and mpn/mips3 uses this.
#
SUFFIXES = .s .S .as .asm

# can be overridden during development, eg. "make RM_TMP=: mul_1.lo"
RM_TMP = rm -f

#if BUILD_YASM
#ASSEMBLER = $(top_srcdir)/strip_fPIC.sh $(MPIR_AS) -p gas -I $(top_builddir) $(OBJECT_FORMAT) $(GSYM_FLAG) -o $@ 
#else
ASSEMBLER = $(CCAS) $(COMPILE_FLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .s .S .as .asm .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/../mpn/Makeasm.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps tune/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps tune/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../mpn/Makeasm.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

libspeed.la: $(libspeed_la_OBJECTS) $(libspeed_la_DEPENDENCIES) $(EXTRA_libspeed_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libspeed_la_LINK)  $(libspeed_la_OBJECTS) $(libspeed_la_LIBADD) $(LIBS)

speed$(EXEEXT): $(speed_OBJECTS) $(speed_DEPENDENCIES) $(EXTRA_speed_DEPENDENCIES) 
	@rm -f speed$(EXEEXT)
	$(AM_V_CCLD)$(speed_LINK) $(speed_OBJECTS) $(speed_LDADD) $(LIBS)

speed-dynamic$(EXEEXT): $(speed_dynamic_OBJECTS) $(speed_dynamic_DEPENDENCIES) $(EXTRA_speed_dynamic_DEPENDENCIES) 
	@rm -f speed-dynamic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(speed_dynamic_OBJECTS) $(speed_dynamic_LDADD) $(LIBS)

speed-ext$(EXEEXT): $(speed_ext_OBJECTS) $(speed_ext_DEPENDENCIES) $(EXTRA_speed_ext_DEPENDENCIES) 
	@rm -f speed-ext$(EXEEXT)
	$(AM_V_CCLD)$(speed_ext_LINK) $(speed_ext_OBJECTS) $(speed_ext_LDADD) $(LIBS)

tuneup$(EXEEXT): $(tuneup_OBJECTS) $(tuneup_DEPENDENCIES) $(EXTRA_tuneup_DEPENDENCIES) 
	@rm -f tuneup$(EXEEXT)
	$(AM_V_CCLD)$(tuneup_LINK) $(tuneup_OBJECTS) $(tuneup_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


$(top_builddir)/tests/libtests.la:
	cd $(top_builddir)/tests; $(MAKE) $(AM_MAKEFLAGS) libtests.la

tune:
	$(MAKE) $(AM_MAKEFLAGS) tuneup$(EXEEXT)
	./tuneup

allprogs: $(EXTRA_PROGRAMS)

$(TUNE_MPN_SRCS_BASIC):
	for i in $(TUNE_MPN_SRCS_BASIC); do \
	  echo "#define TUNE_PROGRAM_BUILD 1" >$$i; \
	  echo "#include \"mpn/generic/$$i\"" >>$$i; \
	done

$(TUNE_FFT_SRCS_BASIC):
	for i in $(TUNE_FFT_SRCS_BASIC); do \
	  echo "#define TUNE_PROGRAM_BUILD 1" >$$i; \
	  echo "#include \"fft/$$i\"" >>$$i; \
	done

divrem_1.c:
	echo "#define TUNE_PROGRAM_BUILD 1"                >divrem_1.c
	echo "#define __gmpn_divrem_1  mpn_divrem_1_tune" >>divrem_1.c
	echo "#include \"mpn/generic/divrem_1.c\""        >>divrem_1.c

mod_1.c:
	echo "#define TUNE_PROGRAM_BUILD 1"          >mod_1.c
	echo "#define __gmpn_mod_1  mpn_mod_1_tune" >>mod_1.c
	echo "#include \"mpn/generic/mod_1.c\""     >>mod_1.c

sqr_asm.asm: $(top_builddir)/mpn/sqr_basecase.asm
	echo 'define(SQR_KARATSUBA_THRESHOLD_OVERRIDE,SQR_KARATSUBA_THRESHOLD_MAX)' >sqr_asm.asm
	echo 'include(../mpn/sqr_basecase.asm)' >>sqr_asm.asm

# FIXME: Should it depend on $(top_builddir)/fac_ui.h too?
fac_ui.c: $(top_builddir)/mpz/fac_ui.c
	echo "#define TUNE_PROGRAM_BUILD 1"          >fac_ui.c
	echo "#define __gmpz_fac_ui mpz_fac_ui_tune" >>fac_ui.c
	echo "#define __gmpz_oddfac_1 mpz_oddfac_1_tune" >>fac_ui.c
	echo "#include \"mpz/oddfac_1.c\""           >>fac_ui.c
	echo "#include \"mpz/fac_ui.c\""             >>fac_ui.c

# .s assembler, no preprocessing.
#
.s.o:
	$(CCAS) $(COMPILE_FLAGS) `test -f '$<' || echo '$(srcdir)/'`$<
.s.obj:
	$(CCAS) $(COMPILE_FLAGS) `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
.s.lo:
	$(LIBTOOL) --mode=compile --tag=CC $(CCAS) $(COMPILE_FLAGS) `test -f '$<' || echo '$(srcdir)/'`$<

# .S assembler, preprocessed with cpp.
#
# It's necessary to run $(CPP) separately, since it seems not all compilers
# recognise .S files, in particular "cc" on HP-UX 10 and 11 doesn't (and
# will silently do nothing if given a .S).
#
# For .lo we need a helper script, as described below for .asm.lo.
#
.S.o:
	$(CPP) $(PREPROCESS_FLAGS) `test -f '$<' || echo '$(srcdir)/'`$< | grep -v '^#' >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s
.S.obj:
	$(CPP) $(PREPROCESS_FLAGS) `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi` | grep -v '^#' >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s
.S.lo:
	$(LIBTOOL) --mode=compile --tag=CC $(top_srcdir)/mpn/cpp-ccas --cpp="$(CPP) $(PREPROCESS_FLAGS)" $(CCAS) $(COMPILE_FLAGS) `test -f '$<' || echo '$(srcdir)/'`$<

# .asm assembler, preprocessed with m4 unless we are in MINGW64
#
# .o and .obj are non-PIC and just need m4 followed by a compile.
#
# .lo is a bit tricky.  Libtool (as of version 1.5) has foo.lo as a little
# text file, and .libs/foo.o and foo.o as the PIC and non-PIC objects,
# respectively.  It'd be asking for lots of trouble to try to create foo.lo
# ourselves, so instead arrange to invoke libtool like a --mode=compile, but
# with a special m4-ccas script which first m4 preprocesses, then compiles.
# --tag=CC is necessary since foo.asm is otherwise unknown to libtool.
#
# Libtool adds -DPIC when building a shared object and the .asm files look
# for that.  But it should be noted that the other PIC flags are on occasion
# important too, in particular FreeBSD 2.2.8 gas 1.92.3 requires -k before
# it accepts PIC constructs like @GOT, and gcc adds that flag only under
# -fPIC.  (Later versions of gas are happy to accept PIC stuff any time.)
#

.asm.o:
	$(M4) -DOPERATION_$* `test -f '$<' || echo '$(srcdir)/'`$< >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s
.asm.obj:
	$(M4) -DOPERATION_$* `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi` >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s
#endif

.asm.lo:
	$(LIBTOOL) --mode=compile --tag=CC $(top_srcdir)/mpn/m4-ccas --m4="$(M4)" $(ASSEMBLER) `test -f '$<' || echo '$(srcdir)/'`$<

#  .as assembler, assembled with Yasm

.as.lo:
	$(LIBTOOL) --mode=compile --tag=CC $(top_srcdir)/strip_fPIC.sh $(MPIR_AS) -I $(top_builddir) $(OBJECT_FORMAT) $(GSYM_FLAG) -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

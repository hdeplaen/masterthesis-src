# Makefile.in generated by automake 1.15.1 from Makefile.am.
# tests/mpf/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright 1996, 1999, 2000, 2001, 2002, 2003, 2004 Free Software
# Foundation, Inc.
#
# This file is part of the GNU MP Library.
#
# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# The GNU MP Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the GNU MP Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mpir
pkgincludedir = $(includedir)/mpir
pkglibdir = $(libdir)/mpir
pkglibexecdir = $(libexecdir)/mpir
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = skylakeavx-apple-darwin18.2.0
host_triplet = skylakeavx-apple-darwin18.2.0
check_PROGRAMS = reuse$(EXEEXT) t-add$(EXEEXT) t-cmp_d$(EXEEXT) \
	t-cmp_si$(EXEEXT) t-conv$(EXEEXT) t-div$(EXEEXT) \
	t-dm2exp$(EXEEXT) t-eq$(EXEEXT) t-fits$(EXEEXT) \
	t-get_d$(EXEEXT) t-get_d_2exp$(EXEEXT) t-get_si$(EXEEXT) \
	t-get_ui$(EXEEXT) t-gsprec$(EXEEXT) t-inp_str$(EXEEXT) \
	t-int_p$(EXEEXT) t-mul_ui$(EXEEXT) t-muldiv$(EXEEXT) \
	t-set$(EXEEXT) t-set_q$(EXEEXT) t-set_si$(EXEEXT) \
	t-set_ui$(EXEEXT) t-sqrt$(EXEEXT) t-sqrt_ui$(EXEEXT) \
	t-sub$(EXEEXT) t-trunc$(EXEEXT) t-ui_div$(EXEEXT)
subdir = tests/mpf
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
reuse_SOURCES = reuse.c
reuse_OBJECTS = reuse.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
t_add_SOURCES = t-add.c
t_add_OBJECTS = t-add.$(OBJEXT)
t_add_LDADD = $(LDADD)
t_add_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cmp_d_SOURCES = t-cmp_d.c
t_cmp_d_OBJECTS = t-cmp_d.$(OBJEXT)
t_cmp_d_LDADD = $(LDADD)
t_cmp_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cmp_si_SOURCES = t-cmp_si.c
t_cmp_si_OBJECTS = t-cmp_si.$(OBJEXT)
t_cmp_si_LDADD = $(LDADD)
t_cmp_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_conv_SOURCES = t-conv.c
t_conv_OBJECTS = t-conv.$(OBJEXT)
t_conv_LDADD = $(LDADD)
t_conv_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_div_SOURCES = t-div.c
t_div_OBJECTS = t-div.$(OBJEXT)
t_div_LDADD = $(LDADD)
t_div_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_dm2exp_SOURCES = t-dm2exp.c
t_dm2exp_OBJECTS = t-dm2exp.$(OBJEXT)
t_dm2exp_LDADD = $(LDADD)
t_dm2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_eq_SOURCES = t-eq.c
t_eq_OBJECTS = t-eq.$(OBJEXT)
t_eq_LDADD = $(LDADD)
t_eq_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_fits_SOURCES = t-fits.c
t_fits_OBJECTS = t-fits.$(OBJEXT)
t_fits_LDADD = $(LDADD)
t_fits_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_d_SOURCES = t-get_d.c
t_get_d_OBJECTS = t-get_d.$(OBJEXT)
t_get_d_LDADD = $(LDADD)
t_get_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_d_2exp_SOURCES = t-get_d_2exp.c
t_get_d_2exp_OBJECTS = t-get_d_2exp.$(OBJEXT)
t_get_d_2exp_LDADD = $(LDADD)
t_get_d_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_si_SOURCES = t-get_si.c
t_get_si_OBJECTS = t-get_si.$(OBJEXT)
t_get_si_LDADD = $(LDADD)
t_get_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_ui_SOURCES = t-get_ui.c
t_get_ui_OBJECTS = t-get_ui.$(OBJEXT)
t_get_ui_LDADD = $(LDADD)
t_get_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_gsprec_SOURCES = t-gsprec.c
t_gsprec_OBJECTS = t-gsprec.$(OBJEXT)
t_gsprec_LDADD = $(LDADD)
t_gsprec_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_inp_str_SOURCES = t-inp_str.c
t_inp_str_OBJECTS = t-inp_str.$(OBJEXT)
t_inp_str_LDADD = $(LDADD)
t_inp_str_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_int_p_SOURCES = t-int_p.c
t_int_p_OBJECTS = t-int_p.$(OBJEXT)
t_int_p_LDADD = $(LDADD)
t_int_p_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_mul_ui_SOURCES = t-mul_ui.c
t_mul_ui_OBJECTS = t-mul_ui.$(OBJEXT)
t_mul_ui_LDADD = $(LDADD)
t_mul_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_muldiv_SOURCES = t-muldiv.c
t_muldiv_OBJECTS = t-muldiv.$(OBJEXT)
t_muldiv_LDADD = $(LDADD)
t_muldiv_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_SOURCES = t-set.c
t_set_OBJECTS = t-set.$(OBJEXT)
t_set_LDADD = $(LDADD)
t_set_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_q_SOURCES = t-set_q.c
t_set_q_OBJECTS = t-set_q.$(OBJEXT)
t_set_q_LDADD = $(LDADD)
t_set_q_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_si_SOURCES = t-set_si.c
t_set_si_OBJECTS = t-set_si.$(OBJEXT)
t_set_si_LDADD = $(LDADD)
t_set_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_ui_SOURCES = t-set_ui.c
t_set_ui_OBJECTS = t-set_ui.$(OBJEXT)
t_set_ui_LDADD = $(LDADD)
t_set_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_sqrt_SOURCES = t-sqrt.c
t_sqrt_OBJECTS = t-sqrt.$(OBJEXT)
t_sqrt_LDADD = $(LDADD)
t_sqrt_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_sqrt_ui_SOURCES = t-sqrt_ui.c
t_sqrt_ui_OBJECTS = t-sqrt_ui.$(OBJEXT)
t_sqrt_ui_LDADD = $(LDADD)
t_sqrt_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_sub_SOURCES = t-sub.c
t_sub_OBJECTS = t-sub.$(OBJEXT)
t_sub_LDADD = $(LDADD)
t_sub_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_trunc_SOURCES = t-trunc.c
t_trunc_OBJECTS = t-trunc.$(OBJEXT)
t_trunc_LDADD = $(LDADD)
t_trunc_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_ui_div_SOURCES = t-ui_div.c
t_ui_div_OBJECTS = t-ui_div.$(OBJEXT)
t_ui_div_LDADD = $(LDADD)
t_ui_div_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = reuse.c t-add.c t-cmp_d.c t-cmp_si.c t-conv.c t-div.c \
	t-dm2exp.c t-eq.c t-fits.c t-get_d.c t-get_d_2exp.c t-get_si.c \
	t-get_ui.c t-gsprec.c t-inp_str.c t-int_p.c t-mul_ui.c \
	t-muldiv.c t-set.c t-set_q.c t-set_si.c t-set_ui.c t-sqrt.c \
	t-sqrt_ui.c t-sub.c t-trunc.c t-ui_div.c
DIST_SOURCES = reuse.c t-add.c t-cmp_d.c t-cmp_si.c t-conv.c t-div.c \
	t-dm2exp.c t-eq.c t-fits.c t-get_d.c t-get_d_2exp.c t-get_si.c \
	t-get_ui.c t-gsprec.c t-inp_str.c t-int_p.c t-mul_ui.c \
	t-muldiv.c t-set.c t-set_q.c t-set_si.c t-set_ui.c t-sqrt.c \
	t-sqrt_ui.c t-sub.c t-trunc.c t-ui_div.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI = 64
ACLOCAL = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing autoconf
AUTOHEADER = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing autoheader
AUTOMAKE = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing automake-1.15
AWK = awk
BITS_PER_MP_LIMB = 64
CALLING_CONVENTIONS_OBJS = x86_64call.lo x86_64check$U.lo
CC = /usr/local/bin/gcc-8
CCAS = /usr/local/bin/gcc-8 -c
CC_FOR_BUILD = /usr/local/bin/gcc-8
CFLAGS = -m64 -O2 -march=skylake -mtune=skylake
CPP = /usr/local/bin/gcc-8 -E
CPPFLAGS = 
CPP_FOR_BUILD = /usr/local/bin/gcc-8 -E
CXX = /usr/local/bin/g++-8
CXXCPP = /usr/local/bin/g++-8 -E
CXXFLAGS = -m64 -O2 -march=skylake -mtune=skylake
CYGPATH_W = echo
DEFN_LONG_LONG_LIMB = /* #undef _LONG_LONG_LIMB */
DEFS = -DHAVE_CONFIG_H
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXEEXT_FOR_BUILD = 
FGREP = /usr/bin/grep -F
GMP_CC = /* No __GMP_CC here as --enable-gmpcompat option not selected */
GMP_CFLAGS = 
GMP_LDFLAGS = 
GMP_NAIL_BITS = 0
GREP = /usr/bin/grep
GSYM_FLAG = -D GSYM_PREFIX
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBGMPXX_LDFLAGS = 
LIBGMP_DLL = 0
LIBGMP_LDFLAGS = 
LIBM = 
LIBM_FOR_BUILD = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
M4 = m4
MAINT = #
MAKEINFO = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /opt/local/bin/gmkdir -p
MPIR_AS = /usr/local/bin/yasm
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJECT_FORMAT = -f macho64
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = mpir
PACKAGE_BUGREPORT = http://groups.google.co.uk/group/mpir-devel/
PACKAGE_NAME = MPIR
PACKAGE_STRING = MPIR 3.0.0
PACKAGE_TARNAME = mpir
PACKAGE_URL = 
PACKAGE_VERSION = 3.0.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
SPEED_CYCLECOUNTER_OBJ = x86_64.lo
STRIP = strip
TAL_OBJECT = tal-reent.lo
TUNE_SQR_OBJ = 
U_FOR_BUILD = 
VERSION = 3.0.0
abs_builddir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/tests/mpf
abs_srcdir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/tests/mpf
abs_top_builddir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake
abs_top_srcdir = /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake
ac_ct_AR = ar
ac_ct_CC = /usr/local/bin/gcc-8
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__leading_dot = .
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = skylakeavx-apple-darwin18.2.0
build_alias = 
build_cpu = skylakeavx
build_os = darwin18.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gmp_srclinks =  mpn/add.c mpn/add_1.c mpn/add_n.as mpn/sub.c mpn/sub_1.c mpn/sub_n.as mpn/mul_1.as mpn/addmul_1.asm mpn/submul_1.as mpn/lshift.as mpn/rshift.as mpn/addadd_n.c mpn/addsub_n.c mpn/subadd_n.c mpn/comb_tables.c mpn/divexact_1.c mpn/divexact_by3c.as mpn/divexact_byff.as mpn/divexact_byfobm1.as mpn/divisible_p.c mpn/divrem.c mpn/divrem_1.c mpn/divrem_2.as mpn/divrem_euclidean_qr_1.as mpn/divrem_euclidean_qr_2.as mpn/divrem_euclidean_r_1.c mpn/divrem_hensel_qr_1.c mpn/divrem_hensel_qr_1_1.asm mpn/divrem_hensel_qr_1_2.c mpn/divrem_hensel_r_1.c mpn/divrem_hensel_rsh_qr_1.c mpn/rsh_divrem_hensel_qr_1.c mpn/rsh_divrem_hensel_qr_1_1.asm mpn/rsh_divrem_hensel_qr_1_2.asm mpn/add_err1_n.as mpn/add_err2_n.asm mpn/sub_err1_n.as mpn/sub_err2_n.asm mpn/fib2_ui.c mpn/mod_1.c mpn/mod_34lsub1.c mpn/modexact_1c_odd.as mpn/preinv_mod_1.c mpn/dump.c mpn/gcd_subdiv_step.c mpn/gcdext_lehmer.c mpn/gcdext_1.c mpn/hgcd.c mpn/matrix22_mul.c mpn/hgcd2.c mpn/hgcd2_jacobi.c mpn/hgcd_appr.c mpn/hgcd_jacobi.c mpn/hgcd_matrix.c mpn/hgcd_reduce.c mpn/hgcd_step.c mpn/matrix22_mul1_inverse_vector.c mpn/mod_1_1.asm mpn/mod_1_2.asm mpn/mod_1_3.asm mpn/tdiv_q.c mpn/mp_bases.c mpn/fib_table.c mpn/mulmid_basecase.asm mpn/mulmid.c mpn/mulmid_n.c mpn/toom42_mulmid.c mpn/mulmod_bexpp1.c mpn/mulmod_2expm1.c mpn/mulmod_2expp1_basecase.c mpn/mul_fft.c mpn/mul.c mpn/mul_n.c mpn/mul_basecase.asm mpn/sqr_basecase.asm mpn/random.c mpn/random2.c mpn/pow_1.c mpn/powlo.c mpn/powm.c mpn/binvert.c mpn/urandomb.c mpn/urandomm.c mpn/randomb.c mpn/rrandom.c mpn/invert.c mpn/rootrem.c mpn/sizeinbase.c mpn/sqrtrem.c mpn/get_str.c mpn/set_str.c mpn/scan0.c mpn/scan1.c mpn/popcount.asm mpn/hamdist.asm mpn/cmp.c mpn/perfect_square_p.c mpn/bdivmod.c mpn/gcd.c mpn/gcd_1.c mpn/gcdext.c mpn/tdiv_qr.c mpn/jacobi_base.c mpn/jacobi.c mpn/jacobi_2.c mpn/get_d.c mpn/mullow_n.c mpn/mulhigh_n.c mpn/mullow_n_basecase.asm mpn/mullow_basecase.c mpn/redc_1.as mpn/redc_2.c mpn/redc_n.c mpn/sb_divappr_q.c mpn/toom3_mul.c mpn/toom3_mul_n.c mpn/toom4_mul.c mpn/toom4_mul_n.c mpn/dc_div_q.c mpn/dc_divappr_q.c mpn/sb_div_q.c mpn/sb_div_qr.c mpn/dc_div_qr.c mpn/dc_div_qr_n.c mpn/inv_divappr_q_n.c mpn/inv_divappr_q.c mpn/inv_div_q.c mpn/inv_div_qr.c mpn/inv_div_qr_n.c mpn/rootrem_basecase.c mpn/toom_eval_dgr3_pm1.c mpn/toom_eval_dgr3_pm2.c mpn/toom_eval_pm1.c mpn/toom_eval_pm2.c mpn/toom_eval_pm2exp.c mpn/toom_eval_pm2rexp.c mpn/toom_interpolate_16pts.c mpn/toom8_sqr_n.c mpn/toom8h_mul.c mpn/toom_couple_handling.c mpn/sb_bdiv_q.c mpn/sb_bdiv_qr.c mpn/dc_bdiv_q_n.c mpn/dc_bdiv_q.c mpn/dc_bdiv_qr.c mpn/dc_bdiv_qr_n.c mpn/divexact.c mpn/zero.c mpn/copyi.as mpn/copyd.as mpn/com_n.as mpn/neg_n.c mpn/and_n.asm mpn/andn_n.asm mpn/nand_n.asm mpn/ior_n.asm mpn/iorn_n.asm mpn/nior_n.asm mpn/xor_n.asm mpn/xnor_n.asm mpn/lshift1.as mpn/rshift1.as mpn/lshift2.asm mpn/mul_2.asm mpn/store.asm mpn/karaadd.asm mpn/karasub.as mpn/addmul_2.as mpn/addlsh1_n.as mpn/sublsh1_n.as mpn/sumdiff_n.as mpn/lshiftc.asm mpn/nsumdiff_n.as gmp-mparam.h longlong.h
host = skylakeavx-apple-darwin18.2.0
host_alias = 
host_cpu = skylakeavx
host_os = darwin18.2.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/hdeplaen/Documents/KULeuven/Thesis/frameworks/libs/mpir-3.0.0-skylake/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
mpn_objects =  add$U.lo add_1$U.lo add_n.lo sub$U.lo sub_1$U.lo sub_n.lo mul_1.lo addmul_1.lo submul_1.lo lshift.lo rshift.lo addadd_n$U.lo addsub_n$U.lo subadd_n$U.lo comb_tables$U.lo divexact_1$U.lo divexact_by3c.lo divexact_byff.lo divexact_byfobm1.lo divisible_p$U.lo divrem$U.lo divrem_1$U.lo divrem_2.lo divrem_euclidean_qr_1.lo divrem_euclidean_qr_2.lo divrem_euclidean_r_1$U.lo divrem_hensel_qr_1$U.lo divrem_hensel_qr_1_1.lo divrem_hensel_qr_1_2$U.lo divrem_hensel_r_1$U.lo divrem_hensel_rsh_qr_1$U.lo rsh_divrem_hensel_qr_1$U.lo rsh_divrem_hensel_qr_1_1.lo rsh_divrem_hensel_qr_1_2.lo add_err1_n.lo add_err2_n.lo sub_err1_n.lo sub_err2_n.lo fib2_ui$U.lo mod_1$U.lo mod_34lsub1$U.lo modexact_1c_odd.lo preinv_mod_1$U.lo dump$U.lo gcd_subdiv_step$U.lo gcdext_lehmer$U.lo gcdext_1$U.lo hgcd$U.lo matrix22_mul$U.lo hgcd2$U.lo hgcd2_jacobi$U.lo hgcd_appr$U.lo hgcd_jacobi$U.lo hgcd_matrix$U.lo hgcd_reduce$U.lo hgcd_step$U.lo matrix22_mul1_inverse_vector$U.lo mod_1_1.lo mod_1_2.lo mod_1_3.lo tdiv_q$U.lo mp_bases$U.lo fib_table$U.lo mulmid_basecase.lo mulmid$U.lo mulmid_n$U.lo toom42_mulmid$U.lo mulmod_bexpp1$U.lo mulmod_2expm1$U.lo mulmod_2expp1_basecase$U.lo mul_fft$U.lo mul$U.lo mul_n$U.lo mul_basecase.lo sqr_basecase.lo random$U.lo random2$U.lo pow_1$U.lo powlo$U.lo powm$U.lo binvert$U.lo urandomb$U.lo urandomm$U.lo randomb$U.lo rrandom$U.lo invert$U.lo rootrem$U.lo sizeinbase$U.lo sqrtrem$U.lo get_str$U.lo set_str$U.lo scan0$U.lo scan1$U.lo popcount.lo hamdist.lo cmp$U.lo perfect_square_p$U.lo bdivmod$U.lo gcd$U.lo gcd_1$U.lo gcdext$U.lo tdiv_qr$U.lo jacobi_base$U.lo jacobi$U.lo jacobi_2$U.lo get_d$U.lo mullow_n$U.lo mulhigh_n$U.lo mullow_n_basecase.lo mullow_basecase$U.lo redc_1.lo redc_2$U.lo redc_n$U.lo sb_divappr_q$U.lo toom3_mul$U.lo toom3_mul_n$U.lo toom4_mul$U.lo toom4_mul_n$U.lo dc_div_q$U.lo dc_divappr_q$U.lo sb_div_q$U.lo sb_div_qr$U.lo dc_div_qr$U.lo dc_div_qr_n$U.lo inv_divappr_q_n$U.lo inv_divappr_q$U.lo inv_div_q$U.lo inv_div_qr$U.lo inv_div_qr_n$U.lo rootrem_basecase$U.lo toom_eval_dgr3_pm1$U.lo toom_eval_dgr3_pm2$U.lo toom_eval_pm1$U.lo toom_eval_pm2$U.lo toom_eval_pm2exp$U.lo toom_eval_pm2rexp$U.lo toom_interpolate_16pts$U.lo toom8_sqr_n$U.lo toom8h_mul$U.lo toom_couple_handling$U.lo sb_bdiv_q$U.lo sb_bdiv_qr$U.lo dc_bdiv_q_n$U.lo dc_bdiv_q$U.lo dc_bdiv_qr$U.lo dc_bdiv_qr_n$U.lo divexact$U.lo zero$U.lo copyi.lo copyd.lo com_n.lo neg_n$U.lo and_n.lo andn_n.lo nand_n.lo ior_n.lo iorn_n.lo nior_n.lo xor_n.lo xnor_n.lo lshift1.lo rshift1.lo lshift2.lo mul_2.lo store.lo karaadd.lo karasub.lo addmul_2.lo addlsh1_n.lo sublsh1_n.lo sumdiff_n.lo lshiftc.lo nsumdiff_n.lo
mpn_objs_in_libgmp =  mpn/add$U.lo mpn/add_1$U.lo mpn/add_n.lo mpn/sub$U.lo mpn/sub_1$U.lo mpn/sub_n.lo mpn/mul_1.lo mpn/addmul_1.lo mpn/submul_1.lo mpn/lshift.lo mpn/rshift.lo mpn/addadd_n$U.lo mpn/addsub_n$U.lo mpn/subadd_n$U.lo mpn/comb_tables$U.lo mpn/divexact_1$U.lo mpn/divexact_by3c.lo mpn/divexact_byff.lo mpn/divexact_byfobm1.lo mpn/divisible_p$U.lo mpn/divrem$U.lo mpn/divrem_1$U.lo mpn/divrem_2.lo mpn/divrem_euclidean_qr_1.lo mpn/divrem_euclidean_qr_2.lo mpn/divrem_euclidean_r_1$U.lo mpn/divrem_hensel_qr_1$U.lo mpn/divrem_hensel_qr_1_1.lo mpn/divrem_hensel_qr_1_2$U.lo mpn/divrem_hensel_r_1$U.lo mpn/divrem_hensel_rsh_qr_1$U.lo mpn/rsh_divrem_hensel_qr_1$U.lo mpn/rsh_divrem_hensel_qr_1_1.lo mpn/rsh_divrem_hensel_qr_1_2.lo mpn/add_err1_n.lo mpn/add_err2_n.lo mpn/sub_err1_n.lo mpn/sub_err2_n.lo mpn/fib2_ui$U.lo mpn/mod_1$U.lo mpn/mod_34lsub1$U.lo mpn/modexact_1c_odd.lo mpn/preinv_mod_1$U.lo mpn/dump$U.lo mpn/gcd_subdiv_step$U.lo mpn/gcdext_lehmer$U.lo mpn/gcdext_1$U.lo mpn/hgcd$U.lo mpn/matrix22_mul$U.lo mpn/hgcd2$U.lo mpn/hgcd2_jacobi$U.lo mpn/hgcd_appr$U.lo mpn/hgcd_jacobi$U.lo mpn/hgcd_matrix$U.lo mpn/hgcd_reduce$U.lo mpn/hgcd_step$U.lo mpn/matrix22_mul1_inverse_vector$U.lo mpn/mod_1_1.lo mpn/mod_1_2.lo mpn/mod_1_3.lo mpn/tdiv_q$U.lo mpn/mp_bases$U.lo mpn/fib_table$U.lo mpn/mulmid_basecase.lo mpn/mulmid$U.lo mpn/mulmid_n$U.lo mpn/toom42_mulmid$U.lo mpn/mulmod_bexpp1$U.lo mpn/mulmod_2expm1$U.lo mpn/mulmod_2expp1_basecase$U.lo mpn/mul_fft$U.lo mpn/mul$U.lo mpn/mul_n$U.lo mpn/mul_basecase.lo mpn/sqr_basecase.lo mpn/random$U.lo mpn/random2$U.lo mpn/pow_1$U.lo mpn/powlo$U.lo mpn/powm$U.lo mpn/binvert$U.lo mpn/urandomb$U.lo mpn/urandomm$U.lo mpn/randomb$U.lo mpn/rrandom$U.lo mpn/invert$U.lo mpn/rootrem$U.lo mpn/sizeinbase$U.lo mpn/sqrtrem$U.lo mpn/get_str$U.lo mpn/set_str$U.lo mpn/scan0$U.lo mpn/scan1$U.lo mpn/popcount.lo mpn/hamdist.lo mpn/cmp$U.lo mpn/perfect_square_p$U.lo mpn/bdivmod$U.lo mpn/gcd$U.lo mpn/gcd_1$U.lo mpn/gcdext$U.lo mpn/tdiv_qr$U.lo mpn/jacobi_base$U.lo mpn/jacobi$U.lo mpn/jacobi_2$U.lo mpn/get_d$U.lo mpn/mullow_n$U.lo mpn/mulhigh_n$U.lo mpn/mullow_n_basecase.lo mpn/mullow_basecase$U.lo mpn/redc_1.lo mpn/redc_2$U.lo mpn/redc_n$U.lo mpn/sb_divappr_q$U.lo mpn/toom3_mul$U.lo mpn/toom3_mul_n$U.lo mpn/toom4_mul$U.lo mpn/toom4_mul_n$U.lo mpn/dc_div_q$U.lo mpn/dc_divappr_q$U.lo mpn/sb_div_q$U.lo mpn/sb_div_qr$U.lo mpn/dc_div_qr$U.lo mpn/dc_div_qr_n$U.lo mpn/inv_divappr_q_n$U.lo mpn/inv_divappr_q$U.lo mpn/inv_div_q$U.lo mpn/inv_div_qr$U.lo mpn/inv_div_qr_n$U.lo mpn/rootrem_basecase$U.lo mpn/toom_eval_dgr3_pm1$U.lo mpn/toom_eval_dgr3_pm2$U.lo mpn/toom_eval_pm1$U.lo mpn/toom_eval_pm2$U.lo mpn/toom_eval_pm2exp$U.lo mpn/toom_eval_pm2rexp$U.lo mpn/toom_interpolate_16pts$U.lo mpn/toom8_sqr_n$U.lo mpn/toom8h_mul$U.lo mpn/toom_couple_handling$U.lo mpn/sb_bdiv_q$U.lo mpn/sb_bdiv_qr$U.lo mpn/dc_bdiv_q_n$U.lo mpn/dc_bdiv_q$U.lo mpn/dc_bdiv_qr$U.lo mpn/dc_bdiv_qr_n$U.lo mpn/divexact$U.lo mpn/zero$U.lo mpn/copyi.lo mpn/copyd.lo mpn/com_n.lo mpn/neg_n$U.lo mpn/and_n.lo mpn/andn_n.lo mpn/nand_n.lo mpn/ior_n.lo mpn/iorn_n.lo mpn/nior_n.lo mpn/xor_n.lo mpn/xnor_n.lo mpn/lshift1.lo mpn/rshift1.lo mpn/lshift2.lo mpn/mul_2.lo mpn/store.lo mpn/karaadd.lo mpn/karasub.lo mpn/addmul_2.lo mpn/addlsh1_n.lo mpn/sublsh1_n.lo mpn/sumdiff_n.lo mpn/lshiftc.lo mpn/nsumdiff_n.lo
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/tests
LDADD = $(top_builddir)/tests/libtests.la $(top_builddir)/libmpir.la
TESTS = $(check_PROGRAMS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps tests/mpf/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps tests/mpf/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES) $(EXTRA_reuse_DEPENDENCIES) 
	@rm -f reuse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)

t-add$(EXEEXT): $(t_add_OBJECTS) $(t_add_DEPENDENCIES) $(EXTRA_t_add_DEPENDENCIES) 
	@rm -f t-add$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_add_OBJECTS) $(t_add_LDADD) $(LIBS)

t-cmp_d$(EXEEXT): $(t_cmp_d_OBJECTS) $(t_cmp_d_DEPENDENCIES) $(EXTRA_t_cmp_d_DEPENDENCIES) 
	@rm -f t-cmp_d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_cmp_d_OBJECTS) $(t_cmp_d_LDADD) $(LIBS)

t-cmp_si$(EXEEXT): $(t_cmp_si_OBJECTS) $(t_cmp_si_DEPENDENCIES) $(EXTRA_t_cmp_si_DEPENDENCIES) 
	@rm -f t-cmp_si$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_cmp_si_OBJECTS) $(t_cmp_si_LDADD) $(LIBS)

t-conv$(EXEEXT): $(t_conv_OBJECTS) $(t_conv_DEPENDENCIES) $(EXTRA_t_conv_DEPENDENCIES) 
	@rm -f t-conv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_conv_OBJECTS) $(t_conv_LDADD) $(LIBS)

t-div$(EXEEXT): $(t_div_OBJECTS) $(t_div_DEPENDENCIES) $(EXTRA_t_div_DEPENDENCIES) 
	@rm -f t-div$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_div_OBJECTS) $(t_div_LDADD) $(LIBS)

t-dm2exp$(EXEEXT): $(t_dm2exp_OBJECTS) $(t_dm2exp_DEPENDENCIES) $(EXTRA_t_dm2exp_DEPENDENCIES) 
	@rm -f t-dm2exp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dm2exp_OBJECTS) $(t_dm2exp_LDADD) $(LIBS)

t-eq$(EXEEXT): $(t_eq_OBJECTS) $(t_eq_DEPENDENCIES) $(EXTRA_t_eq_DEPENDENCIES) 
	@rm -f t-eq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_eq_OBJECTS) $(t_eq_LDADD) $(LIBS)

t-fits$(EXEEXT): $(t_fits_OBJECTS) $(t_fits_DEPENDENCIES) $(EXTRA_t_fits_DEPENDENCIES) 
	@rm -f t-fits$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_fits_OBJECTS) $(t_fits_LDADD) $(LIBS)

t-get_d$(EXEEXT): $(t_get_d_OBJECTS) $(t_get_d_DEPENDENCIES) $(EXTRA_t_get_d_DEPENDENCIES) 
	@rm -f t-get_d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_get_d_OBJECTS) $(t_get_d_LDADD) $(LIBS)

t-get_d_2exp$(EXEEXT): $(t_get_d_2exp_OBJECTS) $(t_get_d_2exp_DEPENDENCIES) $(EXTRA_t_get_d_2exp_DEPENDENCIES) 
	@rm -f t-get_d_2exp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_get_d_2exp_OBJECTS) $(t_get_d_2exp_LDADD) $(LIBS)

t-get_si$(EXEEXT): $(t_get_si_OBJECTS) $(t_get_si_DEPENDENCIES) $(EXTRA_t_get_si_DEPENDENCIES) 
	@rm -f t-get_si$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_get_si_OBJECTS) $(t_get_si_LDADD) $(LIBS)

t-get_ui$(EXEEXT): $(t_get_ui_OBJECTS) $(t_get_ui_DEPENDENCIES) $(EXTRA_t_get_ui_DEPENDENCIES) 
	@rm -f t-get_ui$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_get_ui_OBJECTS) $(t_get_ui_LDADD) $(LIBS)

t-gsprec$(EXEEXT): $(t_gsprec_OBJECTS) $(t_gsprec_DEPENDENCIES) $(EXTRA_t_gsprec_DEPENDENCIES) 
	@rm -f t-gsprec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_gsprec_OBJECTS) $(t_gsprec_LDADD) $(LIBS)

t-inp_str$(EXEEXT): $(t_inp_str_OBJECTS) $(t_inp_str_DEPENDENCIES) $(EXTRA_t_inp_str_DEPENDENCIES) 
	@rm -f t-inp_str$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_inp_str_OBJECTS) $(t_inp_str_LDADD) $(LIBS)

t-int_p$(EXEEXT): $(t_int_p_OBJECTS) $(t_int_p_DEPENDENCIES) $(EXTRA_t_int_p_DEPENDENCIES) 
	@rm -f t-int_p$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_int_p_OBJECTS) $(t_int_p_LDADD) $(LIBS)

t-mul_ui$(EXEEXT): $(t_mul_ui_OBJECTS) $(t_mul_ui_DEPENDENCIES) $(EXTRA_t_mul_ui_DEPENDENCIES) 
	@rm -f t-mul_ui$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_mul_ui_OBJECTS) $(t_mul_ui_LDADD) $(LIBS)

t-muldiv$(EXEEXT): $(t_muldiv_OBJECTS) $(t_muldiv_DEPENDENCIES) $(EXTRA_t_muldiv_DEPENDENCIES) 
	@rm -f t-muldiv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_muldiv_OBJECTS) $(t_muldiv_LDADD) $(LIBS)

t-set$(EXEEXT): $(t_set_OBJECTS) $(t_set_DEPENDENCIES) $(EXTRA_t_set_DEPENDENCIES) 
	@rm -f t-set$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_set_OBJECTS) $(t_set_LDADD) $(LIBS)

t-set_q$(EXEEXT): $(t_set_q_OBJECTS) $(t_set_q_DEPENDENCIES) $(EXTRA_t_set_q_DEPENDENCIES) 
	@rm -f t-set_q$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_set_q_OBJECTS) $(t_set_q_LDADD) $(LIBS)

t-set_si$(EXEEXT): $(t_set_si_OBJECTS) $(t_set_si_DEPENDENCIES) $(EXTRA_t_set_si_DEPENDENCIES) 
	@rm -f t-set_si$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_set_si_OBJECTS) $(t_set_si_LDADD) $(LIBS)

t-set_ui$(EXEEXT): $(t_set_ui_OBJECTS) $(t_set_ui_DEPENDENCIES) $(EXTRA_t_set_ui_DEPENDENCIES) 
	@rm -f t-set_ui$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_set_ui_OBJECTS) $(t_set_ui_LDADD) $(LIBS)

t-sqrt$(EXEEXT): $(t_sqrt_OBJECTS) $(t_sqrt_DEPENDENCIES) $(EXTRA_t_sqrt_DEPENDENCIES) 
	@rm -f t-sqrt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_sqrt_OBJECTS) $(t_sqrt_LDADD) $(LIBS)

t-sqrt_ui$(EXEEXT): $(t_sqrt_ui_OBJECTS) $(t_sqrt_ui_DEPENDENCIES) $(EXTRA_t_sqrt_ui_DEPENDENCIES) 
	@rm -f t-sqrt_ui$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_sqrt_ui_OBJECTS) $(t_sqrt_ui_LDADD) $(LIBS)

t-sub$(EXEEXT): $(t_sub_OBJECTS) $(t_sub_DEPENDENCIES) $(EXTRA_t_sub_DEPENDENCIES) 
	@rm -f t-sub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_sub_OBJECTS) $(t_sub_LDADD) $(LIBS)

t-trunc$(EXEEXT): $(t_trunc_OBJECTS) $(t_trunc_DEPENDENCIES) $(EXTRA_t_trunc_DEPENDENCIES) 
	@rm -f t-trunc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_trunc_OBJECTS) $(t_trunc_LDADD) $(LIBS)

t-ui_div$(EXEEXT): $(t_ui_div_OBJECTS) $(t_ui_div_DEPENDENCIES) $(EXTRA_t_ui_div_DEPENDENCIES) 
	@rm -f t-ui_div$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_ui_div_OBJECTS) $(t_ui_div_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
reuse.log: reuse$(EXEEXT)
	@p='reuse$(EXEEXT)'; \
	b='reuse'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-add.log: t-add$(EXEEXT)
	@p='t-add$(EXEEXT)'; \
	b='t-add'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-cmp_d.log: t-cmp_d$(EXEEXT)
	@p='t-cmp_d$(EXEEXT)'; \
	b='t-cmp_d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-cmp_si.log: t-cmp_si$(EXEEXT)
	@p='t-cmp_si$(EXEEXT)'; \
	b='t-cmp_si'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-conv.log: t-conv$(EXEEXT)
	@p='t-conv$(EXEEXT)'; \
	b='t-conv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-div.log: t-div$(EXEEXT)
	@p='t-div$(EXEEXT)'; \
	b='t-div'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-dm2exp.log: t-dm2exp$(EXEEXT)
	@p='t-dm2exp$(EXEEXT)'; \
	b='t-dm2exp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-eq.log: t-eq$(EXEEXT)
	@p='t-eq$(EXEEXT)'; \
	b='t-eq'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-fits.log: t-fits$(EXEEXT)
	@p='t-fits$(EXEEXT)'; \
	b='t-fits'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-get_d.log: t-get_d$(EXEEXT)
	@p='t-get_d$(EXEEXT)'; \
	b='t-get_d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-get_d_2exp.log: t-get_d_2exp$(EXEEXT)
	@p='t-get_d_2exp$(EXEEXT)'; \
	b='t-get_d_2exp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-get_si.log: t-get_si$(EXEEXT)
	@p='t-get_si$(EXEEXT)'; \
	b='t-get_si'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-get_ui.log: t-get_ui$(EXEEXT)
	@p='t-get_ui$(EXEEXT)'; \
	b='t-get_ui'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-gsprec.log: t-gsprec$(EXEEXT)
	@p='t-gsprec$(EXEEXT)'; \
	b='t-gsprec'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-inp_str.log: t-inp_str$(EXEEXT)
	@p='t-inp_str$(EXEEXT)'; \
	b='t-inp_str'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-int_p.log: t-int_p$(EXEEXT)
	@p='t-int_p$(EXEEXT)'; \
	b='t-int_p'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-mul_ui.log: t-mul_ui$(EXEEXT)
	@p='t-mul_ui$(EXEEXT)'; \
	b='t-mul_ui'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-muldiv.log: t-muldiv$(EXEEXT)
	@p='t-muldiv$(EXEEXT)'; \
	b='t-muldiv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-set.log: t-set$(EXEEXT)
	@p='t-set$(EXEEXT)'; \
	b='t-set'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-set_q.log: t-set_q$(EXEEXT)
	@p='t-set_q$(EXEEXT)'; \
	b='t-set_q'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-set_si.log: t-set_si$(EXEEXT)
	@p='t-set_si$(EXEEXT)'; \
	b='t-set_si'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-set_ui.log: t-set_ui$(EXEEXT)
	@p='t-set_ui$(EXEEXT)'; \
	b='t-set_ui'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-sqrt.log: t-sqrt$(EXEEXT)
	@p='t-sqrt$(EXEEXT)'; \
	b='t-sqrt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-sqrt_ui.log: t-sqrt_ui$(EXEEXT)
	@p='t-sqrt_ui$(EXEEXT)'; \
	b='t-sqrt_ui'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-sub.log: t-sub$(EXEEXT)
	@p='t-sub$(EXEEXT)'; \
	b='t-sub'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-trunc.log: t-trunc$(EXEEXT)
	@p='t-trunc$(EXEEXT)'; \
	b='t-trunc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t-ui_div.log: t-ui_div$(EXEEXT)
	@p='t-ui_div$(EXEEXT)'; \
	b='t-ui_div'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


$(top_builddir)/tests/libtests.la:
	cd $(top_builddir)/tests; $(MAKE) $(AM_MAKEFLAGS) libtests.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

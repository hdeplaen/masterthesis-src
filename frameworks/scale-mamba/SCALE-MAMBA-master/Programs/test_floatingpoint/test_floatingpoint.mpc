test(cint(floatingpoint.two_power(1)))
test(cint(floatingpoint.two_power(30)))

b = floatingpoint.bits(cint(23), 5)
test(b[0], 1)
test(b[1], 1)
test(b[2], 1)
test(b[3], 0)
test(b[4], 1)

b = floatingpoint.PreORC([sint(i) for i in [0,1,0,1,0]], 20)
test(b[0], 0)
test(b[1], 1)
test(b[2], 1)
test(b[3], 1)
test(b[4], 1)

x = floatingpoint.PreORC([sint(1)] + [sint(0)] * 1000, program.security)
test(x[0], 1)
test(x[1000], 1)

x = floatingpoint.PreORC([sint(0)] * 1000 + [sint(1)], program.security)
test(x[999], 0)
test(x[1000], 1)

b = floatingpoint.PreOpL(floatingpoint.carry, \
  [(sint(a),sint(b)) for a,b in [(0,1),(1,0),(0,1)]])
test(b[0][0], 0)
test(b[0][1], 1)
test(b[1][1], 1)
test(b[2][1], 1)

b = floatingpoint.KOpL(floatingpoint.carry, \
  [(sint(a),sint(b)) for a,b in [(0,1),(1,0),(0,1)]])
test(b[0], 0)
test(b[1], 1)

b = floatingpoint.KORL([sint(i) for i in [0,1,0]], None)
test(b, 1)

b = floatingpoint.KORC([sint(i) for i in [0,1,0]], 20)
test(b, 1)

b = floatingpoint.KORL([sint(i) for i in [0,0,0]], None)
test(b, 0)

b = floatingpoint.KORC([sint(i) for i in [0,0,0]], 20)
test(b, 0)

test(floatingpoint.Inv(sint(2)) * 2, 1)

b = floatingpoint.BitAdd([sint(i) for i in [0,1,0,1,1]], [sint(i) for i in [0,1,1,1,0]])
test(b[0], 0)
test(b[1], 0)
test(b[2], 0)
test(b[3], 1)
test(b[4], 0)
test(b[5], 1)

b = floatingpoint.BitDec(sint(23), 5, 5, 20)
test(b[0], 1)
test(b[1], 1)
test(b[2], 1)
test(b[3], 0)
test(b[4], 1)

test(floatingpoint.Pow2(sint(23), 32, 20), 2**23)

b,c = floatingpoint.B2U(sint(3), 5, 20)
test(b[0], 1)
test(b[1], 1)
test(b[2], 1)
test(b[3], 0)
test(b[4], 0)
test(c, 8)

test(floatingpoint.Trunc(sint(23), 5, sint(3), 20), 2)

x,y = floatingpoint.Trunc(sint(1), 1, sint(1), 20, True)
test(x, 1)
test(y, 2)

s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(7), 3, 2, 8)
test(s, 2)
test(o, 1)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(4), 3, 2, 8)
test(s, 2)
test(o, 0)

s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(0), 4, 2, 8)
test(s, 0)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(1), 4, 2, 8)
test(s, 0)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(2), 4, 2, 8)
test(s, 1)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(3), 4, 2, 8)
test(s, 1)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(4), 4, 2, 8)
test(s, 1)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(5), 4, 2, 8)
test(s, 1)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(6), 4, 2, 8)
test(s, 2)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(7), 4, 2, 8)
test(s, 2)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(8), 4, 2, 8)
test(s, 2)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(9), 4, 2, 8)
test(s, 2)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(10), 4, 2, 8)
test(s, 3)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(11), 4, 2, 8)
test(s, 3)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(12), 4, 2, 8)
test(s, 3)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(13), 4, 2, 8)
test(s, 3)
test(o, 0)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(14), 4, 2, 8)
test(s, 2)
test(o, 1)
s,o = floatingpoint.TruncRoundNearestAdjustOverflow(sint(15), 4, 2, 8)
test(s, 2)
test(o, 1)

test(floatingpoint.TruncPr(sint(23), 5, 3, 20), 2, 4)
test(floatingpoint.TruncPr(sint(23), 5, 3, 20), 2, 4)
test(floatingpoint.TruncPr(sint(23), 5, 3, 20), 2, 4)

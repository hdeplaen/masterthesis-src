sfloat.vlen = 8   # Length of mantissa in bits
sfloat.plen = 5   # Length of exponent in bits
sfloat.kappa = 4  # Statistical security parameter for floats

v = 1 << (sfloat.vlen - 1)
p1 = -sfloat.vlen + 1
p2 = -sfloat.vlen + 2
one = sfloat(v, p1, 0, 0)
two = sfloat(v, p2, 0, 0)
zero = sfloat(0, 0, 1, 0)
minus_one = sfloat(v, p1, 0, 1)

x = two * one
test(x.v, v)
test(x.p, p2)
test(x.z, 0)
test(x.s, 0)

x = zero * one
test(x.v, 0)
test(x.p, 0)
test(x.z, 1)
test(x.s, 0)

x = minus_one * one
test(x.v, v)
test(x.p, p1)
test(x.z, 0)
test(x.s, 1)

x = two * two
test(x.v, v)
test(x.p, -sfloat.vlen + 3)
test(x.z, 0)
test(x.s, 0)

x = one + one
test(x.v, v)
test(x.p, p2)
test(x.z, 0)
test(x.s, 0)

x = one + zero
test(x.v, v)
test(x.p, p1)
test(x.z, 0)
test(x.s, 0)

x = one + minus_one
test(x.v, 0)
test(x.p, 0)
test(x.z, 1)
test(x.s, 0)

x = minus_one + two
test(x.v, v)
test(x.p, p1)
test(x.z, 0)
test(x.s, 0)

test(floatingpoint.Trunc(sint(12), 8, sint(2), 8), 3)

u,x = floatingpoint.B2U(sint(5), 8, 8)
test(u[0], 1)
test(u[1], 1)
test(u[2], 1)
test(u[3], 1)
test(u[4], 1)
test(u[5], 0)
test(u[6], 0)
test(u[7], 0)

test(floatingpoint.Pow2(sint(3), 8, 8))
test(floatingpoint.Pow2(sint(7), 8, 8))
test(floatingpoint.Pow2(sint(0), 8, 8))
test(floatingpoint.Pow2(sint(1), 8, 8))

x = floatingpoint.PreORC([sint(i%2) for i in range(4)], 8)
test(x[0], 0)
test(x[1], 1)
test(x[2], 1)
test(x[3], 1)

x = floatingpoint.bits(cint(5), 3)
test(x[0], 1)
test(x[1], 0)
test(x[2], 1)

x = sfloat(0)
test(x.v, 0)
test(x.p, 0)
test(x.z, 1)
test(x.s, 0)

x = sfloat(1)
test(x.v, 128)
test(x.p, -7)
test(x.z, 0)
test(x.s, 0)

x = sfloat(-.875)
test(x.v, 224)
test(x.p, -8)
test(x.z, 0)
test(x.s, 1)

x = sfloat(2 ** 22 + 1)
test(x.v, 128)
test(x.p, 15)
test(x.z, 0)
test(x.s, 0)

x = sfloat(sfloat(2 ** -8))
test(x.v, 128)
test(x.p, -15)
test(x.z, 0)
test(x.s, 0)

x = sfloat(sfloat(2 ** -24))
test(x.v, 0)
test(x.p, 0)
test(x.z, 1)
test(x.s, 0)

test(sfloat(1))
test(sfloat(1) + sfloat(1))

test(sfloat(3) + sfloat(3.9))
test(sfloat(10.1))

a = sfloat(100)
b = sfloat(1)
c = sfloat(.01)
d = sfloat(0)
e = sfloat(-.01)
f = sfloat(-1)
g = sfloat(-100)

test(a * a)
test(a * b)
test(a * c)
test(a * d)
test(a * e)
test(a * f)
test(a * g)
test(b * a)
test(b * b)
test(b * c)
test(b * d)
test(b * e)
test(b * f)
test(b * g)
test(c * a)
test(c * b)
# missing underflow handling
#test(c * c)
test(c * d)
#test(c * e)
test(c * f)
test(c * g)
test(d * a)
test(d * b)
test(d * c)
test(d * d)
test(d * e)
test(d * f)
test(d * g)
test(e * a)
test(e * b)
#test(e * c)
test(e * d)
#test(e * e)
test(e * f)
test(e * g)
test(f * a)
test(f * b)
test(f * c)
test(f * d)
test(f * e)
test(f * f)
test(f * g)
test(g * a)
test(g * b)
test(g * c)
test(g * d)
test(g * e)
test(g * f)
test(g * g)

x = sfloat(.5)
test(x ** 0)
test(x ** 1)
test(x ** 2)
test(x ** 3)
test(x ** 4)
test(x ** 5)

x = sfloat(.99999999)
test(x.v, 128)
test(x.p, -7)
test(x)

x = (sfloat(1) + sfloat(2))
test(x.v, 192)
test(x.p, -6)
test(x.z, 0)
test(x.s, 0)

a = sfloat(100)
b = sfloat(1)
c = sfloat(.01)
d = sfloat(0)
e = sfloat(-.01)
f = sfloat(-1)
g = sfloat(-100)

test(a + a)
test(a + b)
test(a + c)
test(a + d)
test(a + e)
test(a + f)
test(a + g)
test(b + a)
test(b + b)
test(b + c)
test(b + d)
test(b + e)
test(b + f)
test(b + g)
test(c + a)
test(c + b)
test(c + c)
test(c + d)
test(c + e)
test(c + f)
test(c + g)
test(d + a)
test(d + b)
test(d + c)
test(d + d)
test(d + e)
test(d + f)
test(d + g)
test(e + a)
test(e + b)
test(e + c)
test(e + d)
test(e + e)
test(e + f)
test(e + g)
test(f + a)
test(f + b)
test(f + c)
test(f + d)
test(f + e)
test(f + f)
test(f + g)
test(g + a)
test(g + b)
test(g + c)
test(g + d)
test(g + e)
test(g + f)
test(g + g)

x = (sfloat(-127) + sfloat(128))
test(x.v, 128)
test(x.p, -7)
test(x)

test(sfloat(100) + sfloat(-99) + sfloat(2))
test(sfloat(100) + sfloat(-99) + sfloat(1))
test(sfloat(100) + sfloat(-99) + sfloat(.5))
test(sfloat(100) + sfloat(-99) + sfloat(-2))
test(sfloat(100) + sfloat(-99) + sfloat(-1))
test(sfloat(100) + sfloat(-99) + sfloat(-.5))

test(-sfloat(0))
test(-sfloat(1))
test(-sfloat(-1))

test(sfloat(1) - sfloat(1))
test(sfloat(2) - sfloat(1))
test(sfloat(1) - sfloat(2))
test(sfloat(1) - sfloat(0))
test(sfloat(0) - sfloat(1))

test(sfloat(1) - sfloat(-1))
test(sfloat(2) - sfloat(-1))
test(sfloat(1) - sfloat(-2))
test(sfloat(1) - sfloat(-0))
test(sfloat(0) - sfloat(-1))

test(sfloat(sint(1)))
test(sfloat(sint(0)))
test(sfloat(sint(-1)))
test(sfloat(sint(2**sfloat.vlen)))
test(sfloat(sint(2**(sfloat.vlen-1))))
test(sfloat(sint(2**(sfloat.vlen+1))))
test(sfloat(sint(2**sfloat.vlen-1)))
test(sfloat(sint(2**(sfloat.vlen+1)-1)))

sfloat.round_nearest = True
test(sfloat(1) + sfloat(1))
a = sfloat(255)
b = sfloat(256)
c = sfloat(1)
d = sfloat(1+2**-7)
e = sfloat(1-2**-8)
f = sfloat(0.5)
test(a)
test(b)
test(c)
test(d)
test(e)
test(f)
test(a + c)
test(a + d)
test(a + e)
test(a + f)
test(b - c)
test(b - d)
test(b - e)
test(b - f)

test(sfloat(1) * sfloat(1))
test(sfloat(7) * sfloat(73))
test(sfloat(11) * sfloat(93))
test(sfloat(9) * sfloat(227))
test(sfloat(151) * sfloat(217))
test(sfloat(255) * sfloat(255))
test(sfloat(226) * sfloat(145))

test(sfloat(sint(511)), 512)
test(sfloat(sint(257)), 258)
test(sfloat(sint(1023)), 1024)
test(sfloat(sint(514)), 516)

test(sfloat(0) == sfloat(0))
test(sfloat(1) == sfloat(-1))
test(sfloat(-1) == sfloat(-1))
test(sfloat(0) == sfloat(1))
test(sfloat(1) == sfloat(2))
test(sfloat(1) == sfloat(1))
test(sfloat(1) == sfloat(1.1))
test(sfloat(0) != sfloat(0))
test(sfloat(0) != sfloat(1))

a = sfloat(100)
b = sfloat(99)
c = sfloat(1)
d = sfloat(0)
e = sfloat(-1)
f = sfloat(-99)
g = sfloat(-100)

test(a < a)
test(a < b)
test(a < c)
test(a < d)
test(a < e)
test(a < f)
test(a < g)
test(b < a)
test(b < b)
test(b < c)
test(b < d)
test(b < e)
test(b < f)
test(b < g)
test(c < a)
test(c < b)
test(c < c)
test(c < d)
test(c < e)
test(c < f)
test(c < g)
test(d < a)
test(d < b)
test(d < c)
test(d < d)
test(d < e)
test(d < f)
test(d < g)
test(e < a)
test(e < b)
test(e < c)
test(e < d)
test(e < e)
test(e < f)
test(e < g)
test(f < a)
test(f < b)
test(f < c)
test(f < d)
test(f < e)
test(f < f)
test(f < g)
test(g < a)
test(g < b)
test(g < c)
test(g < d)
test(g < e)
test(g < f)
test(g < g)

test(a > a)
test(a > b)
test(a <= b)
test(b <= a)
test(a >= b)
test(b >= a)
